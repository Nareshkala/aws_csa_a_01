
STEP-1 : VPC Creation :

$ aws ec2 create-vpc --cidr-block 10.0.0.0/16
{
    "Vpc": {
        "CidrBlock": "10.0.0.0/16",
        "DhcpOptionsId": "dopt-c13ea7ba",
        "State": "pending",
        "VpcId": "vpc-06754012e9d5c9b39",
        "InstanceTenancy": "default",
        "Ipv6CidrBlockAssociationSet": [],
        "CidrBlockAssociationSet": [
            {
                "AssociationId": "vpc-cidr-assoc-0e0f313996273fae8",
                "CidrBlock": "10.0.0.0/16",
                "CidrBlockState": {
                    "State": "associated"
                }
            }
        ],
        "IsDefault": false,
        "Tags": []
    }
}


STEP-2 : Create IGW :

$ aws ec2 create-internet-gateway
{
    "InternetGateway": {
        "Attachments": [],
        "InternetGatewayId": "igw-0f45bbbfe0cb5c64a",
        "Tags": []
    }
}

STEP-3 : aws ec2 attach-internet-gateway --vpc-id "vpc-06754012e9d5c9b39" --internet-gateway-id "igw-0f45bbbfe0cb5c64a"

STEP-4 : Create Route Tables :

$ aws ec2 create-route-table --vpc-id "vpc-06754012e9d5c9b39"
{
    "RouteTable": {
        "Associations": [],
        "PropagatingVgws": [],
        "RouteTableId": "rtb-0e0813d023ade9d31",
        "Routes": [
            {
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "Origin": "CreateRouteTable",
                "State": "active"
            }
        ],
        "Tags": [],
        "VpcId": "vpc-06754012e9d5c9b39"
    }
}
$ 
$ aws ec2 create-route-table --vpc-id "vpc-06754012e9d5c9b39"
{
    "RouteTable": {
        "Associations": [],
        "PropagatingVgws": [],
        "RouteTableId": "rtb-0ce56d947ce565868",
        "Routes": [
            {
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "Origin": "CreateRouteTable",
                "State": "active"
            }
        ],
        "Tags": [],
        "VpcId": "vpc-06754012e9d5c9b39"
    }
}
$ 

STEP-5 : 

$ aws ec2 create-route --route-table-id "rtb-0e0813d023ade9d31" --destination-cidr-block 0.0.0.0/0 --gateway-id "igw-0f45bbbfe0cb5c64a"
{
    "Return": true
}

STEP-6 : 


$ aws ec2 create-subnet --vpc-id "vpc-06754012e9d5c9b39" --cidr-block 10.0.1.0/24 --availability-zone "us-east-1a"
{
    "Subnet": {
        "AvailabilityZone": "us-east-1a",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.1.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "pending",
        "SubnetId": "subnet-0aca07a61163a431c",
        "VpcId": "vpc-06754012e9d5c9b39",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": []
    }
}
$ 
$ aws ec2 create-subnet --vpc-id "vpc-06754012e9d5c9b39" --cidr-block 10.0.2.0/24 --availability-zone "us-east-1b"
{
    "Subnet": {
        "AvailabilityZone": "us-east-1b",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.2.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "pending",
        "SubnetId": "subnet-0ce2612897a54b4ec",
        "VpcId": "vpc-06754012e9d5c9b39",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": []
    }
}
$ aws ec2 create-subnet --vpc-id "vpc-06754012e9d5c9b39" --cidr-block 10.0.3.0/24 --availability-zone "us-east-1a"
{
    "Subnet": {
        "AvailabilityZone": "us-east-1a",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.3.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "pending",
        "SubnetId": "subnet-004d29f9c93dc3d8f",
        "VpcId": "vpc-06754012e9d5c9b39",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": []
    }
}
$ aws ec2 create-subnet --vpc-id "vpc-06754012e9d5c9b39" --cidr-block 10.0.4.0/24 --availability-zone "us-east-1b"
{
    "Subnet": {
        "AvailabilityZone": "us-east-1b",
        "AvailableIpAddressCount": 251,
        "CidrBlock": "10.0.4.0/24",
        "DefaultForAz": false,
        "MapPublicIpOnLaunch": false,
        "State": "pending",
        "SubnetId": "subnet-073f1fac54d05dc2a",
        "VpcId": "vpc-06754012e9d5c9b39",
        "AssignIpv6AddressOnCreation": false,
        "Ipv6CidrBlockAssociationSet": []
    }
}
$ 



STEP-7 :

$ aws ec2 modify-subnet-attribute --subnet-id "subnet-0aca07a61163a431c" --map-public-ip-on-launch
$ 
$ aws ec2 modify-subnet-attribute --subnet-id "subnet-0ce2612897a54b4ec" --map-public-ip-on-launch


STEP-8 :

$ aws ec2 associate-route-table --subnet-id "subnet-0aca07a61163a431c" --route-table-id "rtb-0e0813d023ade9d31"
{
    "AssociationId": "rtbassoc-0cd486817d01e851d"
}
$ 
$ aws ec2 associate-route-table --subnet-id "subnet-0ce2612897a54b4ec" --route-table-id "rtb-0e0813d023ade9d31"
{
    "AssociationId": "rtbassoc-02e257be045d1212a"
}
$ 

STEP-9 :

$ aws ec2 create-nat-gateway --subnet-id "subnet-0aca07a61163a431c" --allocation-id eipalloc-070c888a47308d03a
{
    "NatGateway": {
        "CreateTime": "2019-03-02T06:52:46.000Z",
        "NatGatewayAddresses": [
            {
                "AllocationId": "eipalloc-070c888a47308d03a"
            }
        ],
        "NatGatewayId": "nat-02fa9a7c2396fc2f3",
        "State": "pending",
        "SubnetId": "subnet-0aca07a61163a431c",
        "VpcId": "vpc-06754012e9d5c9b39"
    }
}
$ 


$ aws ec2 associate-route-table --subnet-id "subnet-004d29f9c93dc3d8f" --route-table-id "rtb-0ce56d947ce565868"
{
    "AssociationId": "rtbassoc-0f47a5351f7df117b"
}
$ aws ec2 associate-route-table --subnet-id "subnet-073f1fac54d05dc2a" --route-table-id "rtb-0ce56d947ce565868"
{
    "AssociationId": "rtbassoc-04caf24dd0f3b9456"
}
$ 


STEP-10 :

$ aws ec2 create-route --route-table-id "rtb-0ce56d947ce565868" --destination-cidr-block 0.0.0.0/0 --nat-gateway-id "nat-02fa9a7c2396fc2f3"
{
    "Return": true
}
$ 




1. VPC :
	1. IGW
	2. RTB
	3. Subnets
	4. NatGateway
	5. ELB
	6. Launch Configuration
	7. ASG
	8. Bastion
	9. 2-WebServer - 2 different AZ's - subnets
	10. EFS

2. VPC 
	1. IGW
	2. RTB
	3. Subnets
	4. NatGateway
	5. ELB
	6. Launch Configuration
	7. ASG
	8. Bastion
	9. 2-WebServer - 2 different AZ's - subnets
	10. EFS
	



